name: .NET Pack

on:
  workflow_call:
    inputs:
      version:
        description: The version of your NuGet package, e.g., 1.0.0.
        required: true
        type: string
      projects:
        description: Optional path to the project(s) file to build. Supports globbing. Default is an empty string.
        required: false
        type: string
        default: ''
      configuration:
        description: Defines the build configuration. Default is Debug.
        required: false
        type: string
        default: 'Debug'
      include-preview:
        description: When set to true, includes preview versions of .NET. Default is false.
        required: false
        type: boolean
        default: false
      verbosity-level:
        description: Sets the verbosity level of the command. Allowed values are quiet, minimal, normal, detailed, and diagnostic. Default is quiet.
        required: false
        type: string
        default: 'quiet'
      download-build-artifact-pattern:
        description: The pattern to download the build artifacts. Default, when left empty, is 'format('*-{0}', inputs.configuration)'.
        required: false
        type: string
        default: ''
      upload-packed-artifact-name:
        description: The name of the NuGet package to upload. Default, when left empty, is 'format('NuGet-{0}', inputs.configuration)'.
        required: false
        type: string
        default: ''
      restore-cache-key:
        description: When set, the current workspace will be overwritten with the content of the restore cache. Default is an empty string.
        required: false
        type: string
        default: ''
      timeout-minutes:
        description: The maximum time in minutes to allow the job to run. Default is 15 minutes.
        required: false
        type: number
        default: 15

jobs:
  pack:
    name: ðŸ“¦ Pack
    runs-on: ubuntu-24.04
    timeout-minutes: ${{ inputs.timeout-minutes }}
    steps:
      - name: Install .NET
        uses: codebeltnet/install-dotnet@v2
        with:
          includePreview: ${{ inputs.include-preview }}

      - if: inputs.restore-cache-key != ''
        name: Restore Cache
        uses: actions/cache/restore@v4
        with:
          path: |
            ${{ github.workspace }}
            !${{ github.workspace }}/.git
            ~/.nuget/packages
          key: ${{ inputs.restore-cache-key }}
          restore-keys: |
            dotnet-restore-
          enableCrossOsArchive: true
          fail-on-cache-miss: true

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: ${{ inputs.download-build-artifact-pattern != '' && inputs.download-build-artifact-pattern || format('*-{0}', inputs.configuration) }}
          merge-multiple: true

      - name: Set Version
        run: |
          echo "MINVERVERSIONOVERRIDE=${{ inputs.version }}" >> $GITHUB_ENV
        shell: bash

      - if: ${{ inputs.restore-cache-key == '' }}
        name: Restore Dependencies
        uses: codebeltnet/dotnet-restore@v2
        with:
          projects: ${{ inputs.projects }}
          level: ${{ inputs.verbosity-level }}

      - name: Pack for ${{ inputs.configuration }}
        uses: codebeltnet/dotnet-pack@v3
        with:
          configuration: ${{ inputs.configuration }}
          verbosity-level: ${{ inputs.verbosity-level }}
          projects: ${{ inputs.projects }}
          

      - name: Upload NuGet Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.upload-packed-artifact-name != '' && inputs.upload-packed-artifact-name || format('NuGet-{0}', inputs.configuration) }}
          path: ${{ runner.temp }}/.nuget
          if-no-files-found: error
          include-hidden-files: true
